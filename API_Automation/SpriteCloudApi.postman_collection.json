{
	"info": {
		"_postman_id": "86b5bd80-bb27-4d53-991f-f080460247e8",
		"name": "SpriteCloudApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5634073"
	},
	"item": [
		{
			"name": "Pet Flow",
			"item": [
				{
					"name": "Create Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const schema ={",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"id\": {",
									"     \"type\" : \"number\"",
									"    },",
									"    \"category\":{     ",
									"        \"id\": {",
									"     \"type\" : \"number\"},",
									"      \"name\": {",
									"     \"type\" : \"string\"",
									"    }},",
									"     \"name\": {",
									"     \"type\" : \"string\"},",
									"",
									"     \"photoUrls\" :{\"string\":{",
									"                  \"type\" : \"string\"}},",
									"",
									" \"tags\":",
									"     {   ",
									"        \"id\": {",
									"     \"type\" : \"number\"}},",
									"      \"name\": {",
									"     \"type\" : \"string\"",
									"    },",
									"",
									"      \"status\": {",
									"     \"type\" : \"string\"",
									"    }",
									"    },",
									"    \"required\": [",
									"        \"id\",",
									"        \"name\"",
									"    ]",
									"    ",
									"};",
									"",
									"pm.test(\"Validating schema\", function() {",
									"    pm.response.to.have.jsonSchema(schema);",
									"})",
									"",
									"const jsonResponse = pm.response.json();",
									"var petId = pm.environment.get(\"petId\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Pet created successfully with correct pet id\", function () {",
									"    pm.expect(jsonResponse.id).to.eql(petId).toString();",
									"});",
									"",
									"pm.test(\"Pet status is avaiable\", function () {",
									"    pm.expect(jsonResponse.status).to.eql(\"available\");",
									"});",
									"",
									"",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"petId\", 10)\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{petId}},\n  \"category\": {\n    \"id\":{{petId}},\n    \"name\": \"cats\"\n  },\n  \"name\": \"kitty\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"cat\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pet byId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var petIdFromCreatePet= pm.environment.get(\"petId\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Pet id returned correctly\", function () {\r",
									"    pm.expect(jsonResponse.id).to.eql(petIdFromCreatePet);\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/{{petId}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();",
									"",
									"var petIdFromCreatePet= pm.environment.get(\"petId\");",
									"var petNameUpdated= pm.environment.get(\"petName\");",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Pet id returned correctly\", function () {",
									"    pm.expect(jsonResponse.id).to.eql(petIdFromCreatePet).toString();",
									"});",
									"",
									"pm.test(\"Pet name returned correctly after update\", function () {",
									"    pm.expect(jsonResponse.name).to.eql(petNameUpdated).toString();",
									"});",
									"",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"petName\",\"kitty\")\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{petId}},\n  \"category\": {\n    \"id\":{{petId}},\n    \"name\": \"cats\"\n  },\n  \"name\":\"{{petName}}\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();",
									"",
									"var petIdFromCreatePet= pm.environment.get('petId');",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check code returns 200 in response\", function () {",
									"    pm.expect(jsonResponse.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Check message returned deleted pet id\", function () {",
									"    pm.expect(jsonResponse.message).to.eql((petIdFromCreatePet).toString());",
									"});",
									"",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/{{petId}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pet byId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var petIdFromCreatePet= pm.environment.get(\"petId\");\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Check message returns pet not found\", function () {\r",
									"    pm.expect(jsonResponse.message).to.eql(\"Pet not found\");\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/{{petId}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users Flow",
			"item": [
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var username = pm.environment.set(\"userName\",\"huda12\");\r",
									"var userId = pm.environment.get(\"userId\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check code returns 200 in response\", function () {\r",
									"    pm.expect(jsonResponse.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"message returns created user id\", function () {\r",
									"  pm.expect(jsonResponse.message).to.eql(userId);\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"userId\",\"5\")\r",
									"pm.environment.set(\"userName\",\"huda12\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api_key",
								"value": "apikeytest",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{userId}},\r\n  \"username\": \"{{userName}}\",\r\n  \"firstName\": \"Mohamed\",\r\n  \"lastName\": \"Hussein\",\r\n  \"email\": \"mohamedhussien6758@gmail.com\",\r\n  \"password\": \"12345678\",\r\n  \"phone\": \"01092615526\",\r\n  \"userStatus\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/user",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var username = pm.environment.get(\"userName\");\r",
									"var userId = pm.environment.get(\"userId\");\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check username is returned correctly\", function () {\r",
									"  pm.expect(jsonResponse.username).to.eql(username);\r",
									"});\r",
									"\r",
									"pm.test(\"Check user id is returned correctly\", function () {\r",
									"  pm.expect(jsonResponse.id).to.eql(parseInt(userId));\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api_key",
								"value": "apikeytest",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/{{userName}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"{{userName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var userId = pm.environment.get(\"userId\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check code returns 200 in response\", function () {\r",
									"    pm.expect(jsonResponse.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"message returns updated user id\", function () {\r",
									"  pm.expect(jsonResponse.message).to.eql(userId);\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var username = pm.environment.set(\"userName\", \"huda14\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "api_key",
								"value": "apikeytest",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 5,\r\n  \"username\": \"{{userName}}\",\r\n  \"firstName\": \"Huda\",\r\n  \"lastName\": \"Khaled\",\r\n  \"email\": \"hudakhaled12@gmail.com\",\r\n  \"password\": \"12345678\",\r\n  \"phone\": \"01005498469\",\r\n  \"userStatus\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/{{userName}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"{{userName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user after update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var userNameUpdated = pm.environment.get(\"userName\");\r",
									"var userId = pm.environment.get(\"userId\");\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check username is returned after update\", function () {\r",
									"  pm.expect(jsonResponse.username).to.eql(userNameUpdated);\r",
									"});\r",
									"\r",
									"pm.test(\"Check user id is returned correcly\", function () {\r",
									"  pm.expect(jsonResponse.id).to.eql(parseInt(userId));\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/{{userName}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"{{userName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var username = pm.environment.get(\"userName\");\r",
									"\r",
									"pm.test(\"Check code returns 200 in response\", function () {\r",
									"    pm.expect(jsonResponse.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check message returns deleted username\", function () {\r",
									"  pm.expect(jsonResponse.message).to.eql(username);\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "apikeytest",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/{{userName}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"{{userName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find User Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Check message returns user not found\", function () {\r",
									"  pm.expect(jsonResponse.message).to.eql(\"User not found\");\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/{{userName}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"{{userName}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stores Flow",
			"item": [
				{
					"name": "Place order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var orderId = pm.environment.get(\"orderId\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check order id returns correct\", function () {\r",
									"  pm.expect(jsonResponse.id).to.eql(parseInt(orderId));\r",
									"});\r",
									"\r",
									"pm.test(\"Check that order status is correct\", function () {\r",
									"  pm.expect(jsonResponse.status).to.eql(\"placed\");\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"orderId\", \"5\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{orderId}},\r\n  \"petId\": 10,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2022-03-10T19:46:42.447Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var orderId = pm.environment.get(\"orderId\");\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check order id is returned correctly\", function () {\r",
									"  pm.expect(jsonResponse.id).to.eql(parseInt(orderId));\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{orderId}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"var orderId = pm.environment.get(\"orderId\");\r",
									"\r",
									"pm.test(\"Check code returns 200 in response\", function () {\r",
									"    pm.expect(jsonResponse.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check message returns deleted order\", function () {\r",
									"  pm.expect(jsonResponse.message).to.eql(orderId);\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{orderId}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Check message returns order not found\", function () {\r",
									"  pm.expect(jsonResponse.message).to.eql(\"Order not found\");\r",
									"});\r",
									"\r",
									"pm.sendRequest(\"https://postman-echo.com/delay/1\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{orderId}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "petId",
			"value": ""
		}
	]
}